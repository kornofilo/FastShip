{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/oficina/oficina.component.css","webpack:///./src/app/oficina/oficina.component.html","webpack:///./src/app/oficina/oficina.component.ts","webpack:///./src/app/operaciones/operaciones-metodos-envio/operaciones-metodos-envio.component.css","webpack:///./src/app/operaciones/operaciones-metodos-envio/operaciones-metodos-envio.component.html","webpack:///./src/app/operaciones/operaciones-metodos-envio/operaciones-metodos-envio.component.ts","webpack:///./src/app/operaciones/operaciones-navbar/operaciones-navbar.component.css","webpack:///./src/app/operaciones/operaciones-navbar/operaciones-navbar.component.html","webpack:///./src/app/operaciones/operaciones-navbar/operaciones-navbar.component.ts","webpack:///./src/app/operaciones/operaciones-oficinas/operaciones-oficinas.component.css","webpack:///./src/app/operaciones/operaciones-oficinas/operaciones-oficinas.component.html","webpack:///./src/app/operaciones/operaciones-oficinas/operaciones-oficinas.component.ts","webpack:///./src/app/operaciones/operaciones-sidenav/operaciones-sidenav.component.css","webpack:///./src/app/operaciones/operaciones-sidenav/operaciones-sidenav.component.html","webpack:///./src/app/operaciones/operaciones-sidenav/operaciones-sidenav.component.ts","webpack:///./src/app/operaciones/operaciones.component.css","webpack:///./src/app/operaciones/operaciones.component.html","webpack:///./src/app/operaciones/operaciones.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/firestore-metodos-envio.service.ts","webpack:///./src/app/services/firestore-oficina.service.ts","webpack:///./src/app/usuario/usuario.component.css","webpack:///./src/app/usuario/usuario.component.html","webpack:///./src/app/usuario/usuario.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--Router outlet muestra el componente llamado según la ruta indicada-->\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\nimport * as firebase from 'firebase/app';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { auth } from 'firebase/app';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Home';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { auth } from 'firebase/app';\r\nimport { AppComponent } from './app.component';\r\nimport { OperacionesComponent } from './operaciones/operaciones.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UsuarioComponent } from './usuario/usuario.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {OficinaComponent} from './oficina/oficina.component';\r\nimport 'materialize-css';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { OperacionesNavbarComponent } from './operaciones/operaciones-navbar/operaciones-navbar.component';\r\nimport { OperacionesSidenavComponent } from './operaciones/operaciones-sidenav/operaciones-sidenav.component';\r\n\r\n\r\n// Firebase\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport * as firebase from 'firebase/app';\r\nimport { environment } from '../environments/environment';\r\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\r\nimport { OperacionesMetodosEnvioComponent } from './operaciones/operaciones-metodos-envio/operaciones-metodos-envio.component';\r\nimport { OperacionesOficinasComponent } from './operaciones/operaciones-oficinas/operaciones-oficinas.component';\r\n\r\n\r\n/* Array de Rutas */\r\nconst routes: Routes = [\r\n  {  path: '', component: LoginComponent },\r\n  {  path: 'login', component: LoginComponent },\r\n  {  path: 'operaciones', component: OperacionesComponent, canActivate: [AuthGuard] },\r\n  {  path: 'metodosEnvio', component: OperacionesMetodosEnvioComponent, canActivate: [AuthGuard]},\r\n  {  path: 'admOficinas', component: OperacionesOficinasComponent, canActivate: [AuthGuard]},\r\n  {  path: 'usuario', component: UsuarioComponent },\r\n  {  path: 'oficina',  component: OficinaComponent, canActivate: [AuthGuard]}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    OperacionesComponent,\r\n    UsuarioComponent,\r\n    LoginComponent,\r\n    OficinaComponent,\r\n    OperacionesNavbarComponent,\r\n    OperacionesSidenavComponent,\r\n    OperacionesMetodosEnvioComponent,\r\n    OperacionesOficinasComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes),\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule,\r\n    FormsModule\r\n  ],\r\n  providers: [AuthService, AuthGuard],\r\n  bootstrap: [AppComponent],\r\n})\r\n\r\n\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { take, map, tap } from 'rxjs/operators';\r\nimport {AngularFireAuth} from 'angularfire2/auth';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private afAuth: AngularFireAuth,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.authService.afAuth.authState\r\n      .pipe(take(1), map(authState => !! authState), tap( authenticated => {\r\n         if (!authenticated) {\r\n           this.router.navigate(['/login']);\r\n           alert('Debe iniciar sesión para ingresar a esta sección');\r\n         }\r\n      }));\r\n    }\r\n}\r\n","module.exports = \"body {\\r\\n    display: flex;\\r\\n    min-height: 100vh;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n  main {\\r\\n    flex: 1 0 auto;\\r\\n  }\"","module.exports = \"\\r\\n  <body>\\r\\n      <nav>\\r\\n        <div class=\\\"nav-wrapper grey darken-3\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"brand-logo\\\">FastShip</a>\\r\\n        </div>\\r\\n      </nav> <br><br><br>  \\r\\n\\r\\n      <main>            \\r\\n          <div class=\\\"container grey lighten-4\\\">\\r\\n            <h5 class=\\\"center-align\\\"><b> Inicio de Sesión </b></h5>\\r\\n            <div class=\\\"row\\\">\\r\\n              <!-- Formulario de Inicio de Sesión -->\\r\\n              <form class=\\\"col s12\\\" (submit)=\\\"onSubmitLogin()\\\">            \\r\\n                <div class='row'>\\r\\n                  <div class='input-field col s12'>\\r\\n                    <input class='validate' name=\\\"email\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" type=\\\"email\\\" required />\\r\\n                    <label for='email'>Correo Electrónico</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n    \\r\\n                <div class='row'>\\r\\n                  <div class='input-field col s12'>\\r\\n                    <input class='validate' [(ngModel)]=\\\"password\\\" name='password' class=\\\"form-control\\\" type=\\\"password\\\" required />\\r\\n                    <label for='password'>Contraseña</label>\\r\\n                  </div>  \\r\\n                                   \\r\\n                  <label>\\r\\n                      <a class='pink-text'><b>¿Olvido su contraseña?</b></a>\\r\\n                  </label>            \\r\\n                </div>\\r\\n    \\r\\n                <br />\\r\\n                \\r\\n                  <div class='row'>\\r\\n                    <button type='submit' name='btn_login' class='col s12 btn btn-large orange'><b>Iniciar Sesión</b></button>\\r\\n                  </div>           \\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n      </main>\\r\\n    \\r\\n      <!--Footer -->\\r\\n      <footer class=\\\"page-footer grey darken-3\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"footer-copyright\\\">\\r\\n              <h5 class=\\\"white-text\\\">FastShip</h5>\\r\\n              <p class=\\\"grey-text text-lighten-4\\\">©2018 - Rialvik</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </footer>\\r\\n  </body>\\r\\n  \"","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport { AuthService } from '../services/auth.service';\r\nimport {NgForm} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  constructor(public authService: AuthService) {}\r\n  public email: string;\r\n  public password: string;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmitLogin() {\r\n    this.authService.login(this.email, this.password)\r\n    .then(res => {\r\n      console.log(res);\r\n      location.replace('operaciones');\r\n    }).catch( (err) => {\r\n      if (err.code === 'auth/wrong-password') {\r\n        alert('El Nombre de Usuario o Contraseña ingresada son incorrectos. Inténtelo de nuevo.');\r\n      } else if (err.code === 'auth/invalid-email') {\r\n        alert('El formato del correo electrónico ingresado es inválido. Inténtelo de nuevo.');\r\n      } else if (err.code === 'auth/user-not-found') {\r\n        alert('El correo ingresado no se encuentra registrado en el sistema. Inténtelo de nuevo.');\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<title>Oficina</title>\\r\\n<p>Esta es la oficina</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n// Firebase\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { auth } from 'firebase/app';\r\n\r\n\r\n@Component({\r\n  selector: 'app-oficina',\r\n  templateUrl: './oficina.component.html',\r\n  styleUrls: ['./oficina.component.css']\r\n})\r\nexport class OficinaComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".pointer-cursor {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<!-- Barra de Navegación Superior -->\\r\\n<app-operaciones-navbar></app-operaciones-navbar>    \\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <!-- Barra de Navegación Lateral -->\\r\\n  <app-operaciones-sidenav></app-operaciones-sidenav>      \\r\\n\\r\\n      <!-- Cuerpo de la Sección -->\\r\\n      <div class=\\\"col s9\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <a class=\\\"btn-large col s3 indigo\\\">Métodos de Envío</a>   \\r\\n              <a class=\\\"btn-large col s3 offset-s1 green modal-trigger\\\" href=\\\"#modalCrearME\\\" materialize=\\\"modal\\\">Crear Métodos de Envio</a>           \\r\\n              <a class=\\\"btn-large col s3 offset-s1 red\\\">Eliminar Método de Envio</a>     \\r\\n          </div>   \\r\\n          <hr>\\r\\n          <!-- Tabla con los métodos de envío -->\\r\\n          <div class=\\\"col s11\\\" *ngIf=\\\"arr.length>0;else noData\\\">\\r\\n              <table>\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                        <th>Descripción</th>\\r\\n                        <th>Modificar</th>\\r\\n                        <th>Eliminar</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n          \\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let item of arr\\\">\\r\\n                      <td> Entrega en: {{item.tiempo}} | Tipos de Transporte: {{item.tipos}}\\r\\n                      </td>\\r\\n                      <td><a class=\\\"modal-trigger\\\" (click)=\\\"onUpdate(item)\\\" href=\\\"#modalCrearME\\\">\\r\\n                        <i class=\\\"material-icons black-text\\\">settings_application</i> \\r\\n                          </a>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <a class=\\\"pointer-delete\\\" (click)=\\\"onDelete(item)\\\" >\\r\\n                          <i class=\\\"material-icons black-text center-align\\\">delete</i> \\r\\n                        </a>\\r\\n                      </td>                \\r\\n                </table>\\r\\n\\r\\n          </div>                \\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  <!-- Mensaje en caso no existan métodos de envío -->\\r\\n  <div class=\\\"container\\\">\\r\\n    <ng-template #noData>\\r\\n      \\r\\n      <h5 class=\\\"center-align\\\">No existen métodos de envío registrados</h5>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n\\r\\n    <!-- Modal que contiene el formulario de inserción y actualización de métodos de envío. -->\\r\\n  <div id=\\\"modalCrearME\\\" class=\\\"modal modal-fixed-footer\\\">\\r\\n      <div class=\\\"modal-content row\\\">\\r\\n        <h4>Crear Método de Envío</h4>\\r\\n        <p>Los métodos de envio son los niveles de servicio que son usador por los clientes. </p>\\r\\n        <form #addform=\\\"ngForm\\\">\\r\\n            <div class=\\\"input-field col s6\\\">\\r\\n                <select [(ngModel)]=\\\"model.tiempo\\\" name=\\\"tiempo\\\" class=\\\"form-control\\\" id=\\\"tiempo\\\" required #tiempo=\\\"ngModel\\\">\\r\\n                  <option value=\\\"\\\" disabled selected>Horas</option>\\r\\n                  <option value=\\\"12 horas\\\">12 horas</option>\\r\\n                  <option value=\\\"24 horas\\\">24 horas</option>\\r\\n                  <option value=\\\"48 horas\\\">48 horas</option>\\r\\n                </select>\\r\\n                <label>Tiempo de Envio</label>\\r\\n              </div>\\r\\n              <div class=\\\"col s6\\\">\\r\\n                  <h5>Métodos de Envío</h5>\\r\\n                  <p>\\r\\n                   <label>\\r\\n                      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"cbTierra\\\" class=\\\"form-control\\\" id=\\\"checkBoxTierra\\\" name=\\\"checkBoxTierra\\\"/>\\r\\n                      <span>Tierra</span>\\r\\n                    </label>\\r\\n                  </p>       \\r\\n                  <p>\\r\\n                    <label>\\r\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"cbMar\\\" class=\\\"form-control\\\" id=\\\"checkBoxMar\\\" name=\\\"checkBoxMar\\\"/>\\r\\n                        <span>Mar</span>\\r\\n                    </label>\\r\\n                     </p>\\r\\n                  <p>\\r\\n                    <label>\\r\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"cbAire\\\" class=\\\"form-control\\\" id=\\\"checkBoxAire\\\" name=\\\"checkBoxAire\\\"/>\\r\\n                        <span>Aire</span>\\r\\n                      </label>\\r\\n                    </p>                                 \\r\\n              </div> \\r\\n              \\r\\n             \\r\\n        </form>        \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button (click)='insertSubmit()' *ngIf=\\\"updClicked === false\\\" class=\\\"modal-close btn-flat green-text\\\" [disabled]=\\\"!addform.form.valid\\\">Crear</button>        \\r\\n        <button (click)='updateSubmit(metodoEnvio)' *ngIf=\\\"updClicked === true\\\"  class=\\\"modal-close btn-flat green-text\\\" [disabled]=\\\"!addform.form.valid\\\">Actualizar</button>        \\r\\n        <a class=\\\"modal-close btn-flat red-text\\\" (click)='cleanForm()'>Cancelar</a>\\r\\n      </div>\\r\\n      \\r\\n    </div>      \"","import { Component, OnInit } from '@angular/core';\r\nimport { MetodosEnvio } from '../../classes/metodos-envio';\r\ndeclare let $: any;\r\n\r\n// Firebase\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { auth } from 'firebase/app';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FirestoreMetodosEnvioService } from '../../services/firestore-metodos-envio.service';\r\nimport { FindValueSubscriber } from 'rxjs/internal/operators/find';\r\n\r\n\r\n@Component({\r\n  selector: 'app-operaciones-metodos-envio',\r\n  templateUrl: './operaciones-metodos-envio.component.html',\r\n  styleUrls: ['./operaciones-metodos-envio.component.css']\r\n})\r\nexport class OperacionesMetodosEnvioComponent implements OnInit {\r\n  public isLogIn: boolean;\r\n  public email: string;\r\n  arr: MetodosEnvio[] = [];\r\n  updClicked = false;\r\n  iME: string;\r\n  // Elementos del Form\r\n  cbTierra: boolean;\r\n  cbMar: boolean;\r\n  cbAire: boolean;\r\n  model = { tiempo: '', tipos: []};\r\n  constructor(public authService: AuthService, public _data: FirestoreMetodosEnvioService) {}\r\n\r\n  ngOnInit() {\r\n    // Obtenemos los métodos envío registrados en la base de datos.\r\n    this._data.getMetodosEnvio().subscribe(\r\n      (metodoEnvio: MetodosEnvio[]) => {\r\n      this.arr = metodoEnvio;\r\n     }\r\n    );\r\n\r\n    // Inicialización de los elementos de Materialize que requieren Jquery.\r\n    $(function() {\r\n      $('.collapsible').collapsible();\r\n      $('select').formSelect();\r\n      $('.dropdown-trigger').dropdown();\r\n    });\r\n  }\r\n\r\n  // Función que envía el modelo a la función de insertar método de envío en el service.\r\n  insertSubmit() {\r\n    this.feedTipos();\r\n    this._data.addMetodosEnvio(this.model);\r\n    this.cleanForm();\r\n  }\r\n\r\n  onDelete(metodoEnvio) {\r\n    if (confirm('¿Está seguro que desea borrar este método de envío?')) {\r\n      this._data.deleteMetodosEnvio(metodoEnvio);\r\n    }\r\n  }\r\n\r\n  onUpdate(metodoEnvio) {\r\n    this.iME = metodoEnvio.id;\r\n    this.model.tiempo = metodoEnvio.tiempo;\r\n    this.updClicked = true;\r\n    metodoEnvio.tipos.forEach(element => {\r\n      if (element === 'Tierra') {\r\n        this.cbTierra = true;\r\n      } else if (element === 'Mar') {\r\n        this.cbMar = true;\r\n      } else if (element === 'Aire') {\r\n        this.cbAire = true;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  updateSubmit() {\r\n    this.feedTipos();\r\n    this._data.updateMetodosEnvio(this.iME, this.model.tiempo, this.model.tipos);\r\n    this.cleanForm();\r\n  }\r\n\r\n  cleanForm() {\r\n    this.model.tiempo = '';\r\n    this.model.tipos = [];\r\n    this.cbTierra = false;\r\n    this.cbMar = false;\r\n    this.cbAire = false;\r\n    this.updClicked = false;\r\n  }\r\n\r\n  feedTipos() {\r\n    if (this.cbTierra) {\r\n      this.model.tipos.push('Tierra');\r\n    }\r\n\r\n    if (this.cbMar) {\r\n      this.model.tipos.push('Mar');\r\n    }\r\n\r\n    if (this.cbAire) {\r\n      this.model.tipos.push('Aire');\r\n    }\r\n  }\r\n}\r\n","module.exports = \".pointer-cursor {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<!-- Barra de Navegación -->\\r\\n<header>\\r\\n  <div class=\\\"navbar-fixed col s9\\\">\\r\\n    <nav class=\\\"grey darken-3\\\">\\r\\n        <div class=\\\"nav-wrapper row\\\">\\r\\n          <form class=\\\"col s5 offset-s3\\\">\\r\\n            <div class=\\\"input-field\\\">\\r\\n              <input class=\\\"center-align grey darken-2 white-text\\\" placeholder=\\\"Ingrese un número de tracking, camión, etc.\\\" id=\\\"search\\\" type=\\\"search\\\" required>              \\r\\n              <label class=\\\"label-icon\\\" for=\\\"search\\\"><i class=\\\"material-icons\\\">search</i></label>\\r\\n              <i class=\\\"material-icons\\\">close</i>\\r\\n            </div>\\r\\n          </form>\\r\\n\\r\\n          <!-- E-mail del Usuario Logueado -->\\r\\n          <div class=\\\"col s1 offset-s2 grey darken-3 white-text\\\">\\r\\n            <span>{{email}}</span>\\r\\n          </div>\\r\\n          \\r\\n          <!-- Botón para cerrar sesión -->\\r\\n          <div class=\\\"col s1 red white-text pointer-cursor\\\" (click)='onClickLogout()'>\\r\\n              <a>Cerrar Sesión</a>\\r\\n          </div>          \\r\\n\\r\\n        </div>\\r\\n      </nav>\\r\\n    </div>\\r\\n</header> <br>\"","import { Component, OnInit } from '@angular/core';\r\ndeclare let $: any;\r\n\r\n// Firebase\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-operaciones-navbar',\r\n  templateUrl: './operaciones-navbar.component.html',\r\n  styleUrls: ['./operaciones-navbar.component.css']\r\n})\r\n\r\nexport class OperacionesNavbarComponent implements OnInit {\r\n  public email: string;\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    // Obtenemos el e-mail del usuario logueado.\r\n    this.authService.checkLogin().subscribe( authFB => {\r\n      if (authFB) {\r\n        this.email = authFB.email;\r\n      }\r\n    });\r\n\r\n    $(function() {\r\n      $('.modal').modal();\r\n    });\r\n  }\r\n\r\n  // Función que al ser activada, cierra la sesión de Firebase.\r\n  onClickLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","module.exports = \".pointer-delete {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"   \\r\\n<body>\\r\\n  <!-- Barra de Navegación Superior -->\\r\\n  <app-operaciones-navbar></app-operaciones-navbar> \\r\\n  <div class=\\\"row\\\">\\r\\n    \\r\\n    <!-- Barra de Navegación Lateral -->\\r\\n    <app-operaciones-sidenav></app-operaciones-sidenav>      \\r\\n\\r\\n        <!-- Cuerpo de la Sección -->\\r\\n        <div class=\\\"col s9\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <a class=\\\"btn-large col s3 indigo\\\">Administración de Oficinas</a>   \\r\\n                <a class=\\\"btn-large col s3 offset-s1 green modal-trigger\\\" href=\\\"#modalCrearOficina\\\" materialize=\\\"modal\\\">Crear Oficina</a>           \\r\\n                <a class=\\\"btn-large col s3 offset-s1 red\\\">Eliminar Oficina</a>     \\r\\n            </div>   \\r\\n            <hr>\\r\\n            <!-- Lista de oficinas -->\\r\\n            <div class=\\\"col s9\\\" *ngIf=\\\"arr.length>0;else noData\\\">\\r\\n                  <div class=\\\"col s4\\\" *ngFor=\\\"let item of arr\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-content\\\">\\r\\n                        <span class=\\\"card-title\\\">{{item.nombre}}</span>\\r\\n                        <p>Dirección: {{item.direccion}}</p>\\r\\n                        <p>Tipos: {{item.tipo}}</p>\\r\\n                        <p>Horario: {{item.horario.diasOperacion}} ({{item.horario.horaApertura}}-{{item.horario.horaCierre}})</p>\\r\\n                      </div>\\r\\n                      <div class=\\\"card-action\\\">\\r\\n                        <a class=\\\"modal-trigger\\\" (click)=\\\"onUpdate(item)\\\" href=\\\"#modalCrearOficina\\\">Modificar</a>\\r\\n                        <a class=\\\"pointer-delete\\\" (click)=\\\"onDelete(item)\\\"> Eliminar</a>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n      </div>\\r\\n\\r\\n    <!-- Mensaje en caso no existan métodos de envío -->\\r\\n    <div class=\\\"container\\\">\\r\\n      <ng-template #noData>\\r\\n        \\r\\n        <h5 class=\\\"center-align\\\">No existen oficinas registradas</h5>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n\\r\\n      <!-- Modal que contiene el formulario de inserción y actualización de métodos de envío. -->\\r\\n    <div id=\\\"modalCrearOficina\\\" class=\\\"modal modal-fixed-footer\\\">\\r\\n        <div class=\\\"modal-content row\\\">\\r\\n          <h4>Creación de Oficina</h4>\\r\\n          <form name='formAddOficina' #addform=\\\"ngForm\\\">\\r\\n              <!-- Campo de Nombre de la Oficina -->\\r\\n              <div class=\\\"input-field col s6\\\">\\r\\n                  <input [(ngModel)]=\\\"model.nombre\\\" name=\\\"nombre\\\" type=\\\"text\\\" class=\\\"form-control validate\\\" required #nombre=\\\"ngModel\\\">\\r\\n                  <label for=\\\"nombre\\\">Nombre de la Oficina</label>\\r\\n              </div>\\r\\n              \\r\\n              <!-- Campo de Tipo de la Oficina -->\\r\\n              <div class=\\\"input-field col s6\\\">\\r\\n                  <select [(ngModel)]=\\\"model.tipo\\\" class=\\\"form-control validate\\\" name=\\\"tipo\\\" required #tipo=\\\"ngModel\\\">\\r\\n                      <option disabled value=\\\"\\\" disabled></option>\\r\\n                      <option value=\\\"Centro de Distribución\\\">Centro de Distribución</option>\\r\\n                      <option value=\\\"Tienda\\\">Tienda</option>\\r\\n                      <option value=\\\"Mixta\\\">Mixta</option>\\r\\n                    </select>\\r\\n                    <label>Tipo</label>\\r\\n              </div>\\r\\n\\r\\n              <!-- Campo de Dirección de la Oficina -->\\r\\n              <div class=\\\"input-field col s6\\\">\\r\\n                  <input [(ngModel)]=\\\"model.direccion\\\"  name=\\\"direccion\\\" class=\\\"form-control validate\\\" type=\\\"text\\\" required #direccion=\\\"ngModel\\\">\\r\\n                  <label for=\\\"direccion\\\">Dirección</label>\\r\\n              </div> <br>\\r\\n\\r\\n               <!-- Poscisión Geográfica -->              \\r\\n              <div class=\\\"input-field col s3\\\">                \\r\\n                  <input [(ngModel)]=\\\"model.posGeografica.lat\\\" name=\\\"latitud\\\" type=\\\"number\\\" class=\\\"form-control validate\\\" required step=\\\"any\\\" #latitud=\\\"ngModel\\\">\\r\\n                  <label for=\\\"latitud\\\">Latitud</label>                               \\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"input-field col s3\\\">                \\r\\n                  <input [(ngModel)]=\\\"model.posGeografica.long\\\" name=\\\"longitud\\\" type=\\\"number\\\" step=\\\"any\\\" class=\\\"form-control validate\\\" required #longitud=\\\"ngModel\\\">\\r\\n                  <label for=\\\"longitud\\\">Longitud</label>                               \\r\\n              </div>\\r\\n              \\r\\n              <!-- Días Laborables -->              \\r\\n              <div class=\\\"input-field col s6\\\">\\r\\n                  <select [(ngModel)]=\\\"model.horario.diasLaborables\\\" name=\\\"diasLaborables\\\" class=\\\"form-control validate\\\" required #diasLaborables=\\\"ngModel\\\">\\r\\n                      <option disabled value=\\\"\\\" disabled></option>\\r\\n                      <option value=\\\"Lunes-Viernes\\\">Lunes-Viernes</option>\\r\\n                      <option value=\\\"Lunes-Sábado\\\">Lunes-Sábado</option>\\r\\n                      <option value=\\\"Todos los Días\\\">Todos los Días</option>\\r\\n                    </select>\\r\\n                    <label>Días Laborables</label>\\r\\n              </div> <br>\\r\\n\\r\\n              <!-- Hora de Apertura --> \\r\\n              <div class=\\\"input-field col s3\\\">\\r\\n                  <input [(ngModel)]=\\\"model.horario.horaApertura\\\" type=\\\"time\\\" name=\\\"horaApertura\\\" class=\\\"form-control validate\\\" required #horaApertura=\\\"ngModel\\\">\\r\\n                  <label>Hora de Apertura</label>                                  \\r\\n              </div>\\r\\n\\r\\n              <!-- Hora de Cierre --> \\r\\n              <div class=\\\"input-field col s3\\\">\\r\\n                  <input [(ngModel)]=\\\"model.horario.horaCierre\\\" type=\\\"time\\\" name=\\\"horaCierre\\\" class=\\\"form-control validate\\\" required #horaCierre=\\\"ngModel\\\">\\r\\n                <label>Hora de Cierre</label>                                  \\r\\n              </div>\\r\\n\\r\\n            <!-- Disponibilidad --> \\r\\n            <label>Disponibilidad</label> \\r\\n            <p>\\r\\n              <label>\\r\\n                <input [(ngModel)]=\\\"model.disponibilidad.envia\\\" type=\\\"checkbox\\\" name=\\\"envia\\\" class=\\\"form-control validate\\\" #envia=\\\"ngModel\\\"/>\\r\\n                <span>Envía</span>\\r\\n              </label>\\r\\n            </p>\\r\\n              <label>\\r\\n                  <input [(ngModel)]=\\\"model.disponibilidad.recibe\\\" type=\\\"checkbox\\\" name=\\\"recibe\\\" class=\\\"form-control validate\\\" #recibe=\\\"ngModel\\\"/>\\r\\n                  <span>Recibe</span>\\r\\n              </label>                                        \\r\\n          </form>          \\r\\n                        \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button (click)='insertSubmit()' *ngIf=\\\"updClicked === false\\\" class=\\\"modal-close btn-flat green-text\\\" [disabled]=\\\"!addform.form.valid\\\">Crear</button>        \\r\\n          <button (click)='updateSubmit(metodoEnvio)' *ngIf=\\\"updClicked === true\\\"  class=\\\"modal-close btn-flat green-text\\\" [disabled]=\\\"!addform.form.valid\\\">Actualizar</button>        \\r\\n          <a class=\\\"modal-close btn-flat red-text\\\" (click)='cleanForm()'>Cancelar</a>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n</body>      \"","import { Component, OnInit } from '@angular/core';\r\nimport { Oficina } from '../../classes/oficina';\r\ndeclare let $: any;\r\n\r\n// Firebase\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { auth } from 'firebase/app';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FirestoreOficinaService } from '../../services/firestore-oficina.service';\r\nimport { FindValueSubscriber } from 'rxjs/internal/operators/find';\r\nimport { Form } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-operaciones-oficinas',\r\n  templateUrl: './operaciones-oficinas.component.html',\r\n  styleUrls: ['./operaciones-oficinas.component.css']\r\n})\r\nexport class OperacionesOficinasComponent implements OnInit {\r\n  formAddOficina: Form;\r\n  arr: Oficina[] = [];\r\n  updClicked = false;\r\n  newOficina: Oficina;\r\n  idOficina: string;\r\n  // Modelo con la estructura de la clase oficina que obtiene los datos ingresados en el form.\r\n  model = { nombre: '', tipo: '', direccion: '', posGeografica: {lat: 0, long: 0},\r\n  horario: {diasLaborables: '', horaApertura: '', horaCierre: ''}, disponibilidad: {envia: false, recibe: false}};\r\n\r\n  constructor(public authService: AuthService, public _data: FirestoreOficinaService) {}\r\n\r\n  ngOnInit() {\r\n    // Obtenemos las oficinas registradas en la base de datos.\r\n    this._data.getOficinas().subscribe(\r\n      (oficina: Oficina[]) => {\r\n      this.arr = oficina;\r\n      console.log(this.arr);\r\n     }\r\n    );\r\n\r\n    // Inicialización de los elementos de Materialize que requieren JQuery para su funcionamiento.\r\n    $(function() {\r\n      $('select').formSelect();\r\n      $('.timepicker').timepicker({\r\n        twelveHour:\tfalse,\r\n        container: 'body'\r\n      });\r\n    });\r\n  }\r\n\r\n  // Función que envía el modelo a la función de insertar oficina en el service.\r\n  insertSubmit() {\r\n    console.log(this.model);\r\n    this._data.addOficina(this.model);\r\n    this.cleanForm();\r\n  }\r\n\r\n  // Función que desactiva el botón de submit de crear y activa el de actualizar.\r\n  onUpdate(oficina) {\r\n\r\n    this.idOficina=oficina.id;\r\n\r\n    this.model.nombre=oficina.nombre;\r\n    this.model.tipo=oficina.tipo;\r\n    this.model.direccion=oficina.direccion;\r\n    this.model.tipo=oficina.tipo;\r\n\r\n    this.model.posGeografica.lat=oficina.posGeografica.lat;\r\n    this.model.posGeografica.long=oficina.posGeografica.long;\r\n\r\n    this.model.horario.diasLaborables=oficina.horario.diasLaborables;\r\n    this.model.horario.horaApertura=oficina.horario.horaApertura;\r\n    this.model.horario.horaCierre=oficina.horario.horaCierre;\r\n\r\n    this.model.disponibilidad.envia=oficina.disponibilidad.envia;\r\n    this.model.disponibilidad.recibe=oficina.disponibilidad.recibe;\r\n    this.updClicked = true;\r\n\r\n  }\r\n\r\n  // Función que limpia los elementos del modelo.\r\n  cleanForm() {\r\n    this.model.direccion = '';\r\n    this.model.disponibilidad.envia = false;\r\n    this.model.disponibilidad.recibe = false;\r\n    this.model.horario.diasLaborables = '';\r\n    this.model.horario.horaApertura  = '';\r\n    this.model.horario.horaCierre  = '';\r\n    this.model.posGeografica = {lat: 0, long: 0};\r\n    this.model.nombre = '';\r\n    this.model.tipo  = '';\r\n    this.updClicked = false;\r\n  }\r\n\r\n  onDelete(metodoEnvio) {\r\n    if (confirm('¿Está seguro que desea borrar esta oficina?')) {\r\n      this._data.deleteOficina(metodoEnvio);\r\n    }\r\n  }\r\n  updateSubmit(){\r\n  this._data.updateOficina(this.idOficina,this.model);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col s12 m4 l3\\\">        \\r\\n    <ul id=\\\"slide-out\\\" class=\\\"sidenav sidenav-fixed\\\">\\r\\n        <div>\\r\\n            <h1>FastShip</h1>\\r\\n          </div>\\r\\n      <li class=\\\"grey darken-3\\\"><a class=\\\"white-text\\\" routerLink=\\\"/metodosEnvio\\\">Métodos de Envio</a></li>\\r\\n      <li class=\\\"grey darken-3\\\"><a class=\\\"white-text\\\" routerLink=\\\"/admOficinas\\\">Administración de Oficinas</a></li>\\r\\n      <li class=\\\"grey darken-3\\\"><a class=\\\"white-text\\\" routerLink=\\\"\\\">Administración de Rutas</a></li>      \\r\\n    </ul>\\r\\n    <a href=\\\"#\\\" data-target=\\\"slide-out\\\" class=\\\"sidenav-trigger\\\"><i class=\\\"material-icons\\\">menu</i></a>    \\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\ndeclare let $: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-operaciones-sidenav',\r\n  templateUrl: './operaciones-sidenav.component.html',\r\n  styleUrls: ['./operaciones-sidenav.component.css']\r\n})\r\nexport class OperacionesSidenavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    $(document).ready(function() {\r\n      $('.sidenav').sidenav();\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Barra de Navegación Superior -->\\r\\n<app-operaciones-navbar></app-operaciones-navbar>    \\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <!-- Barra de Navegación Lateral -->\\r\\n  <app-operaciones-sidenav></app-operaciones-sidenav>      \\r\\n\\r\\n      <!-- Cuerpo de la Sección -->\\r\\n      <div class=\\\"col s9\\\">\\r\\n              <div class=\\\"col s3\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-image\\\">\\r\\n                    <img src=\\\"assets/img/operaciones/metodosEnvio.jpg\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"card-content\\\">\\r\\n                    <span class=\\\"card-title grey-text text-darken-4\\\">Métodos de Envío</span>\\r\\n                    <p>Servicios de Entrega con tiempos en tránsito definidos y garantizados.</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-action\\\">\\r\\n                    <a routerLink=\\\"/metodosEnvio\\\">Ver más...</a>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col s3\\\">\\r\\n                  <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-image\\\">\\r\\n                      <img src=\\\"assets/img/operaciones/oficinas.jpeg\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"card-content\\\">\\r\\n                      <span class=\\\"card-title grey-text text-darken-4\\\">Administración de Oficinas</span>\\r\\n                      <p>Centros de Distribución, Oficinas de Servicio Locales y Hubs.</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-action\\\">\\r\\n                      <a routerLink=\\\"/admOficinas\\\">Ver más...</a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col s3\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-image\\\">\\r\\n                        <img src=\\\"assets/img/operaciones/rutas.jpeg\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"card-content\\\">\\r\\n                        <span class=\\\"card-title grey-text text-darken-4\\\">Administración de Rutas</span>\\r\\n                        <p>*Descripción*</p>\\r\\n                      </div>\\r\\n                      <div class=\\\"card-action\\\">\\r\\n                        <a routerLink=\\\"/metodosEnvio\\\">Ver más...</a>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n      </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-operaciones',\r\n  templateUrl: './operaciones.component.html',\r\n  styleUrls: ['./operaciones.component.css']\r\n})\r\n\r\nexport class OperacionesComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AngularFireAuth} from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  constructor(public afAuth: AngularFireAuth) { }\r\n\r\n  logout() {\r\n    this.afAuth.auth.signOut();\r\n    location.replace('login');\r\n  }\r\n\r\n  signUp(email: string, password: string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password)\r\n      .then(userData => resolve(userData),\r\n      err => reject(err));\r\n    });\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\r\n      .then(userData => resolve(userData),\r\n      err => reject(err));\r\n    });\r\n  }\r\n\r\n  checkLogin() {\r\n    return this.afAuth.authState.pipe(map (auth => auth));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MetodosEnvio } from '../classes/metodos-envio';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreMetodosEnvioService {\r\n  metodosEnvioCollection: AngularFirestoreCollection<MetodosEnvio>;\r\n  metodosEnvio: Observable<MetodosEnvio[]>;\r\n  metodosEnvioDoc: AngularFirestoreDocument<MetodosEnvio>;\r\n  constructor(public _afs: AngularFirestore) {\r\n    this.metodosEnvioCollection = this._afs.collection('/metodosEnvio');\r\n    this.metodosEnvio = this.metodosEnvioCollection.snapshotChanges().pipe(map(\r\n      changes => {\r\n        return changes.map(\r\n          a => {\r\n            const data = a.payload.doc.data() as MetodosEnvio;\r\n            data.id = a.payload.doc.id;\r\n            return data;\r\n          });\r\n\r\n      }));\r\n  }\r\n\r\n  getMetodosEnvio() {\r\n    return this.metodosEnvio;\r\n  }\r\n  addMetodosEnvio(metodosEnvio) {\r\n    this.metodosEnvioCollection.add(metodosEnvio);\r\n  }\r\n  deleteMetodosEnvio(metodosEnvio) {\r\n    this.metodosEnvioDoc = this._afs.doc('metodosEnvio/' + metodosEnvio.id);\r\n    this.metodosEnvioDoc.delete();\r\n  }\r\n\r\n  updateMetodosEnvio(iME, tiempoNew: string, tiposNew: string[]) {\r\n    console.log(tiposNew);\r\n    this.metodosEnvioDoc = this._afs.doc('metodosEnvio/' + iME);\r\n    this.metodosEnvioDoc.update({\r\n     tiempo : tiempoNew,\r\n     tipos: tiposNew\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Oficina } from '../classes/oficina';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreOficinaService {\r\n  oficinasCollection: AngularFirestoreCollection<Oficina>;\r\n  oficinas: Observable<Oficina[]>;\r\n  oficinasDoc: AngularFirestoreDocument<Oficina>;\r\n  constructor(public _afs: AngularFirestore) {\r\n    this.oficinasCollection = this._afs.collection('/oficinas');\r\n    this.oficinas = this.oficinasCollection.snapshotChanges().pipe(map(\r\n      changes => {\r\n        return changes.map(\r\n          a => {\r\n            const data = a.payload.doc.data() as Oficina;\r\n            data.id = a.payload.doc.id;\r\n            return data;\r\n          });\r\n\r\n      }));\r\n  }\r\n\r\n  getOficinas() {\r\n    return this.oficinas;\r\n  }\r\n\r\n  addOficina(oficina) {\r\n    this.oficinasCollection.add(oficina);\r\n  }\r\n\r\n  deleteOficina(metodosEnvio) {\r\n    this.oficinasDoc = this._afs.doc('oficinas/' + metodosEnvio.id);\r\n    this.oficinasDoc.delete();\r\n  }\r\n\r\n  updateOficina(id,oficina){\r\n    console.log(oficina);\r\n    this.oficinasDoc=this._afs.doc('oficinas/'+id);\r\n    this.oficinasDoc.update(oficina);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  usuario works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-usuario',\r\n  templateUrl: './usuario.component.html',\r\n  styleUrls: ['./usuario.component.css']\r\n})\r\nexport class UsuarioComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: 'AIzaSyC7R7VcUvNKOaR5Sy5bt78nEy2M-McdYt0',\r\n    authDomain: 'soft9-69398.firebaseapp.com',\r\n    databaseURL: 'https://soft9-69398.firebaseio.com',\r\n    projectId: 'soft9-69398',\r\n    storageBucket: 'soft9-69398.appspot.com',\r\n    messagingSenderId: '126938974326'\r\n  }\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}